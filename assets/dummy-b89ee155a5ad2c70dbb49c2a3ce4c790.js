"use strict"
define("dummy/app",["exports","dummy/resolver","ember-load-initializers","dummy/config/environment"],function(e,t,n,i){Object.defineProperty(e,"__esModule",{value:!0})
var a=Ember.Application.extend({modulePrefix:i.default.modulePrefix,podModulePrefix:i.default.podModulePrefix,Resolver:t.default});(0,n.default)(a,i.default.modulePrefix),e.default=a}),define("dummy/components/resize-text",["exports","ember-resize-text/components/resize-text"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/resizing-component",["exports","dummy/templates/components/resizing-component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend({layout:t.default,tagName:"a"})}),define("dummy/initializers/container-debug-adapter",["exports","ember-resolver/resolvers/classic/container-debug-adapter"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"container-debug-adapter",initialize:function(){var e=arguments[1]||arguments[0]
e.register("container-debug-adapter:main",t.default),e.inject("container-debug-adapter:main","namespace","application:main")}}}),define("dummy/initializers/export-application-global",["exports","dummy/config/environment"],function(e,t){function n(){var e=arguments[1]||arguments[0]
if(!1!==t.default.exportApplicationGlobal){var n
if("undefined"!=typeof window)n=window
else if("undefined"!=typeof global)n=global
else{if("undefined"==typeof self)return
n=self}var i,a=t.default.exportApplicationGlobal
i="string"==typeof a?a:Ember.String.classify(t.default.modulePrefix),n[i]||(n[i]=e,e.reopen({willDestroy:function(){this._super.apply(this,arguments),delete n[i]}}))}}Object.defineProperty(e,"__esModule",{value:!0}),e.initialize=n,e.default={name:"export-application-global",initialize:n}}),define("dummy/resolver",["exports","ember-resolver"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("dummy/router",["exports","dummy/config/environment"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0})
var n=Ember.Router.extend({location:t.default.locationType,rootURL:t.default.rootURL})
n.map(function(){}),e.default=n}),define("dummy/services/text-measurer",["exports","ember-text-measurer/services/text-measurer"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/templates/application",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"EctY1J75",block:'{"symbols":[],"statements":[[6,"h1"],[7],[0,"block usage"],[8],[0,"\\n"],[6,"pre"],[7],[0,"{{#resize-text}}\\n  Welcome to an automatically resizing ember headline...\\n"],[0,"{{/resize-text}}\\n"],[8],[0,"\\n\\n"],[4,"resize-text",null,null,{"statements":[[0,"  Welcome to an automatically resizing ember headline...\\n"]],"parameters":[]},null],[0,"\\n"],[6,"h2"],[7],[0,"container attribute"],[8],[0,"\\n"],[6,"p"],[7],[0,"\\n  Specifying a parent container, which is used to track the available width allows to render inline dom elements, while removing the requirement to occupy all the available width. This is particularly useful to display links that should resize, but not occupy the full width unless needed.\\n"],[8],[0,"\\n"],[1,[18,"resizing-component"],false],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/templates/application.hbs"}})}),define("dummy/templates/components/resizing-component",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"95tbgjYB",block:'{"symbols":[],"statements":[[4,"resize-text",null,[["minSize","maxSize","containterElement","tagName"],[12,40,[20,["element"]],[20,["h2"]]]],{"statements":[[0,"  "],[6,"a"],[9,"href","#"],[7],[0,"resizing link text"],[8],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"dummy/templates/components/resizing-component.hbs"}})}),define("dummy/config/environment",[],function(){try{var e="dummy/config/environment",t=document.querySelector('meta[name="'+e+'"]').getAttribute("content"),n={default:JSON.parse(unescape(t))}
return Object.defineProperty(n,"__esModule",{value:!0}),n}catch(t){throw new Error('Could not read config from meta tag with name "'+e+'".')}}),runningTests||require("dummy/app").default.create({})
